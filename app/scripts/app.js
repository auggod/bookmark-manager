// Generated by LiveScript 1.3.1
(function(){
  var app;
  chrome.webRequest.onHeadersReceived.addListener(function(info){
    var headers, i, header;
    headers = info.responseHeaders;
    i = headers.length - 1;
    while (i >= 0) {
      header = headers[i].name.toLowerCase();
      if (header === 'x-frame-options' || header === 'frame-options') {
        headers.splice(i, 1);
      }
      --i;
    }
    return {
      responseHeaders: headers
    };
  }, {
    urls: ['*://*/*'],
    types: ['sub_frame']
  }, ['blocking', 'responseHeaders']);
  app = angular.module('BookmarksManagerApp', ['ui.router']);
  app.config(function($compileProvider, $stateProvider, $urlRouterProvider, $locationProvider){
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/);
    $urlRouterProvider.otherwise('/bookmarks');
    return $stateProvider.state('bookmarks', {
      abstract: true,
      url: '/bookmarks',
      templateUrl: '/app/templates/bookmarks/index.html'
    }).state('bookmarks.list', {
      url: '',
      templateUrl: '/app/templates/bookmarks/list.html'
    });
  });
  app.controller('MainCtrl', [
    '$sce', '$scope', function($sce, $scope){
      $scope.bookmarks = [];
      $scope.trustSrc = function(src){
        return $sce.trustAsResourceUrl(src);
      };
      $scope.showView = function(url){
        return $scope.viewUrl = url;
      };
      return chrome.bookmarks.getRecent(1000, function(data){
        $scope.bookmarks = data;
        $scope.viewUrl = $scope.bookmarks[0].url;
        return $scope.$apply();
      });
    }
  ]);
}).call(this);
